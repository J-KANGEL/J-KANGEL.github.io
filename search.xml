<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>just reverse it</title>
      <link href="/2018/12/10/reverse/"/>
      <url>/2018/12/10/reverse/</url>
      
        <content type="html"><![CDATA[<p>IDA打开程序，查看start函数C伪代码。<br><img src="/2018/12/10/reverse/001.png" alt=""><br>首先来看第一个for循环，它将输入的16个字符分成4部分。v12占20字节，用来存放大小为16字节的str，sub_402573是MD5计算函数，将4个部分的MD5值存放在64字节大小的v6中。具体对应关系如下图(每一格表示一个字节)。<br><img src="/2018/12/10/reverse/002.png" alt=""></p><p>如何看出sub_402573函数是MD5算法，进入该函数，看到两个函数，进入第一个，有一些初始赋值的操作，猜测为MD5。再返回来看v6，v6占64个字节，分成四部分就是16字节，每个字节包含两个十六进制，刚好每部分可以存一个MD5值，进一步猜测为MD5算法。于是动态调试进行验证。</p><p>将程序丢入od，在call sub_402573的地方下断点，运行程序，输入“1234567890123456”，继续运行，跟踪v6所在的内存，如下图，发现与“1234”、“5678”、“9012”、“3456”的MD5值相同，验证猜测。</p><p><img src="/2018/12/10/reverse/003.png" alt=""></p><p>接着到了strtol函数，这是一个C语言库函数。这里的意思是将v12的值转化为十六进制，中间的参数‘0’表示不返回非法字符串，意味着输入的每个字符应该是十六进制字符，否则每一部分可能就少于4个字符。由图2可知v12[3]+3、v12[2]+2、v12[1]+1、v12刚好对应每一部分字符串。</p><p>sub_4025b1函数，v12[3]+3 &gt; v12[2]+2 &gt; v12[1]+1 &gt; v12 &gt; 999，保证输入顺序。</p><p><img src="/2018/12/10/reverse/004.png" alt=""></p><p>sub_402513函数，是这道题最复杂的地方。首先来看传参，a1为输入值的一部分，a2为该部分的MD5值。关于小头位序存储方式，例如1234存为0x 34 12。因此，a2&gt;&gt;4即为MD5值的第一个字符，a2&amp;0xF为第二字符，(a2+1)&gt;&gt;4为第三个字符，(a2+1)&amp;0xF为第四个字符，这里只取MD5前四个字符作比较。</p><p>数字+48和字母+87是将十六进制转为assic码(ord(‘0’-0)=48，ord(‘a’-a)=87)。</p><p>v3是int型，占四个字节，分别为LOBYTE、BYTE1,、BYTE2、BYTE3。因此是将MD5值的3241与原字符串1234作比较，相等则为真。</p><p><img src="/2018/12/10/reverse/005.png" alt=""></p><p>最后和固定字符串进行异或得到flag，编写脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                                md5=hashlib.md5()</span><br><span class="line">                                md5.update((i+j+k+l).encode(<span class="string">'utf8'</span>))</span><br><span class="line">                                <span class="keyword">if</span> md5.hexdigest()[:<span class="number">4</span>]==l+j+i+k:</span><br><span class="line">                                        sys.stdout.write(i+j+k+l)</span><br><span class="line"></span><br><span class="line">v3 = <span class="string">"d\x01@flQAizAST\biTB"</span></span><br><span class="line">a = <span class="string">"31795a469327c6e6"</span></span><br><span class="line">flag = strxor(v3,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\nflag&#123;%s&#125;"</span>%flag</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>输入字符串为”31795a469327c6e6”，flag为：flag{W0w_Y0u_Crack_1t}</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>note</title>
      <link href="/2018/11/26/note/"/>
      <url>/2018/11/26/note/</url>
      
        <content type="html"><![CDATA[<p>life is beautiful!</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
